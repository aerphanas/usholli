module Main exposing (..)

import Browser
import Http
import List
import Json.Decode exposing ( Decoder
                            , map8
                            , map2
                            , at
                            , field
                            , string
                            , index
                            , int
                            , list
                            )
import Html exposing  ( Html
                      , text
                      , div
                      , button
                      , br
                      , select
                      , option
                      , ul
                      , li
                      )
import Html.Events exposing ( onClick )

-- MAIN

main : Program () Model Msg
main = 
  Browser.element { init = init
                  , update = update
                  , subscriptions = \_ -> Sub.none
                  , view = view
                  }

-- MODEl

type Model
  = Gagal String
  | Memuat
  | BerhasilKota (List DaftarKota)
  | SemuaKota (List DaftarKota)
  | BerhasilJadwal Jadwal

type alias DaftarKota =
    { id : String
    , lokasi : String
    }

type alias Jadwal =
    { imsak : String
    , subuh : String
    , terbit : String
    , dhuha : String
    , dzuhur : String
    , ashar : String
    , maghrib : String
    , isya : String
    }

init : () -> (Model, Cmd Msg)
init _ =
  ( Memuat
  , dapatListKota
  )

-- UPDATE

type Msg
  = Terlepas
  | MuatJadwal
  | MuatKota
  | DapatKota ( Result Http.Error (List DaftarKota) )
  | DapatJadwal ( Result Http.Error Jadwal )

update : Msg -> Model -> (Model, Cmd Msg)
update msg _ =
    case msg of
        DapatKota data ->
          case data of
            Ok hasil ->
              (BerhasilKota hasil, Cmd.none)

            Err _ ->
              (Gagal "Gagal saat memperoses data kota", Cmd.none)

        DapatJadwal data ->
          case data of
            Ok hasil ->
              (BerhasilJadwal hasil, Cmd.none)
            Err _ ->
              (Gagal "Gagal saat memproses data jadwal", Cmd.none)

        MuatJadwal ->
          (Memuat, dapatListJadwal)

        MuatKota ->
          (Memuat, dapatListKota)

        Terlepas ->
          (Gagal "Gagal saat mengambil data", Cmd.none)

-- VIEW

view : Model -> Html Msg
view model =
    div []
      [ keadaan model
      ]

keadaan : Model -> Html Msg
keadaan model = div []
    [ button [ onClick MuatJadwal ] [ text "memuat jadwal" ]
    , button [ onClick MuatKota ] [text "memuat daftar kota"]
    , br [] []
    , case model of
        Gagal x ->
          text x
        Memuat ->
          text "Memuat data mohon tunggu"
        BerhasilKota data ->
          membuatPilihan data
        BerhasilJadwal _ ->
          text "berhasil memuat jadwal"
        SemuaKota data ->
          membuatPilihan data
     ]
          
membuatPilihan : (List DaftarKota) -> Html Msg
membuatPilihan data =
    select []
        (List.map (\l -> option [] [ text l.lokasi ]) data)
      
-- HTTP

dapatListKota : Cmd Msg
dapatListKota =
  Http.get
      { url = "https://api.myquran.com/v1/sholat/kota/semua"
      , expect = Http.expectJson DapatKota listKotaDecoder
      }
      
dapatListJadwal : Cmd Msg
dapatListJadwal =
  Http.get
    { url = "https://api.myquran.com/v1/sholat/jadwal/1609/2021/06/23"
    , expect = Http.expectJson DapatJadwal listJadwalDecoder
    }

listKotaDecoder : Decoder (List DaftarKota)
listKotaDecoder =
    list
        (map2 (\id lokasi -> { id = id, lokasi = lokasi })
            (field "id" string)
            (field "lokasi" string)
        )

listJadwalDecoder : Decoder Jadwal
listJadwalDecoder = 
  map8 Jadwal
    (at ["data", "jadwal", "imsak"] string)
    (at ["data", "jadwal", "subuh"] string)
    (at ["data", "jadwal", "terbit"] string)
    (at ["data", "jadwal", "dhuha"] string)
    (at ["data", "jadwal", "dzuhur"] string)
    (at ["data", "jadwal", "ashar"] string)
    (at ["data", "jadwal", "maghrib"] string)
    (at ["data", "jadwal", "isya"] string)
